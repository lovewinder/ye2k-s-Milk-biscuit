1[sp](1) IE(edge) (Trident)<br>(2) 火狐(firefox) (Gecko)<br>(3) 谷歌(chrome) (blink)<br>(4) 苹果(safari) (webkit)<br>(5) 欧朋(Opera) (blink 早期: presto)[or]
2[sp](1) src="图片地址"<br>(2) alt="图片的替换文本"<br>(3) title="图片标题"<br>(4) width="400" height="400"[or]
3[sp](1) ./或不写: 当前目录<br>(2) ../: 上级目录<br>(3) /: 下级目录[or]
4[sp](1) href="链接的地址"<br>(2) target="链接的打开方式":<br>[1] _self: 默认值,覆盖当前页面打开<br>[2] _blank: 新窗口打开[or]
5[sp](1) input:<br>[1] text: 单行文本输入框<br>[2] password: 密码框<br>[3] radio: 单选框(在多个里面选择一个),默认选中项checked.单选框要生效必须具备name属性,并且同一种类型的单选框的name取值必须一样<br>[4] checkbox: 复选框,默认选中项checked<br>[5] button: 普通按钮<br>[6] file: 用户上传控件<br>[7] submit: 提交按钮<br>(2) textarea: 多行文本输入框<br>(3) select: 下拉菜单,默认选中项selected[or]
6[sp](1) font-size: 设置字体的大小<br>(2) font-weight: 设置字体的粗细,取值: normal/bold/100 - 900<br>(3) font-style: 设置字体的风格(样式),取值: normal默认,显示标准的字体样式;italic字体倾斜<br>(4) font-family: 设置不同的字体<br>(5) font: font-style  font-weight  font-size/line-height  font-family;其中font-size和font-family必须指定[or]
7[sp](1) width: 表格的宽度<br>(2) height: 表格的高度<br>(3) border: 表格的边框<br>(4) align: 表格的对齐方式<br>(5) cellspacing: 单元格与单元格的间距<br>(6) cellpadding: 单元格与单元格内容的间距<br>(7) rowspan: 合并行<br>(8) colspan: 合并列[or]
8[sp](1) <video src="..."><</video>:<br>[1] autoplay: 自动播放<br>[2] controls: 播放控件<br>[3] loop: 循环播放<br>(2) 大致同上[or]
9[sp]* {<br>属性1: 值1;<br>属性2: 值2;<br>}<br>选中任何元素,后期用于页面初始化[or]
10[sp]伪类选择器可以理解为选择的元素的一种状态,常用的就是:hover[or]
11[sp](1) text-align: 水平居中<br>取值: left right center<br>该属性控制的是标签 "内部的文字"<br>(2) text-indent: 首行缩进<br>取值可以是像素,也可以是em<br>(3) text-decoration: 字体下划线和删除线<br>取值: underline下划线/line-through删除线/none去掉多余的样式<br>(4) line-height:值;line-height: 行高<br>单位是像素<br>如果将标签的高度和行高设置成一样,那么这个标签里的文字可以在这个标签里面垂直居中[or]
12[sp]颜色属性的取值可以是: 十六进制/rgb()/rgba()/单词[or]
13[sp](1) 继承性:<br>后代元素会继承祖先元素的一些样式,比如跟文字相关属性可以继承<br>块元素可以继承父级元素的宽度<br>(2) 层叠性: 后渲染的css样式会覆盖掉先渲染的css样式(权重相同的情况下)<br>(3) 优先级: 继承 < 通配符 < 标签选择器 < 类选择器 < ID选择器 < 行内样式 <　!important[or]
14[sp](1) 继承或者* 的贡献值: 0,0,0,0<br>每个元素(标签)贡献值为0,0,0,1<br>每个类,伪类贡献值为0,0,1,0<br>每个ID贡献值为0,1,0,0<br>每个行内样式贡献值1,0,0,0<br>每个!important贡献值正无穷[or]
15[sp]width + height + padding + border[or]
16[sp](1)border: 边框大小 边框样式(solid实线/dashed虚线/dotted点线/double双实线) 边框颜色<br>(2) border-方位名词[or]
17[sp](1)padding的取值可以是1-4个<br>[1] 1: 控制整个上下左右<br>2: 第一个控制上下,第二个控制左右<br>3: 第一个控制的上,第二个控制的左右,第三个控制的下<br>4: 上右下左<br>(2)padding-方位名词<br>* 行内元素里不要写上下padding[or]
18[sp](1) 外边距设置整体和padding相同<br>(2) 行内元素不要给上下margin<br>(3) 在一个块级元素有固定的width时,可以使用margin: 0 auto让一个块级元素水平居中[or]
19[sp]* {<br>padding: 0;<br>margin: 0;<br>}[or]
20[sp](1) 相邻块元素垂直外边距的合并<br>解决: 避免这种场景即可<br>(2) 嵌套块元素垂直外边距的合并: 对于两个嵌套关系的块元素,如果父元素没有上内边距及边框,则父元素的上外边距会与子元素的上外边距发生合并,合并后的外边距为两者中的较大者,即使父元素的上外边距为0，也会发生合并<br>解决:<br>[1] 可以为父元素定义1像素的上边框或上内边距<br>[2] 可以为父元素添加overflow:hidden[or]
21[sp]固定盒子的宽和高,即使后来添加了padding,也会自动减去padding这部分值,保持盒子整体不变[or]
22[sp](1) 可以和其他浮动元素排成一排<br>(2) 可以自定义宽高<br>(3) 如果没有自定义宽高由内容撑开[or]
23[sp](1) 脱标的元素不占标准流的位置<br>(2) 可以自定义宽高<br>(3) 没有自定义宽高的情况下盒子由内容撑开<br>(4) margin:auto对于脱标元素不起作用[or]
24[sp](1) 浮动是在盒子内容区域浮动,不会超出padding区域<br>(2) 浮动的盒子一排装不下的时候会掉下来(掉下来的位置会根据上一个浮动盒子的高度决定, 会以上一个盒子的底边线为基准线水平移动，如果在移动的过程里面被挡住了,那么就会卡在这里地方)<br>(3) 右浮动会颠倒盒子顺序<br>(4)  浮动的盒子压不住文字和图片(因为浮动最开始就是实现图文绕排的)[or]
25[sp](1) 浮动元素撑不开父级容器<br>(2)清除浮动的方法<br>[1] 强行给父盒子添加高度(不推荐,不利于后期维护)<br>[2] 创建一个新的块级盒子放在浮动元素的最后面,给这个盒子添加一个css属性: clear:both;(不推荐，会产生一个多余的盒子)<br>[3] 用伪元素闭合浮动(推荐,书写一个公共类就可以使用)<br>[4] 给父元素添加overflow:hidden; (在某些特定场景下使用不了)[or]
26[sp](1) 就是在当前元素内容的前面或者后面追加一个盒子 这个盒子由css渲染<br>(2)<br>[1] 伪元素由css渲染,所以不会增加你的DOM(html结构)开销<br>[2] 伪元素默认是行内元素,可以进行转块等处理<br>[3] 伪元素不管有没有内容,content这个值一定不能少,即使没有,也要写个空<br>[4] 伪元素官方推荐写"::",但是为了兼容考虑,写成单冒号<br>[5] 因为伪元素是css渲染,所以JS获取不到[or]
27[sp]是约束网页的一个具体的值,因为电脑的屏幕不一样大，为了在不同的电脑上视觉效果一致，我们需要版心作为约束[or]
28[sp]border-collapse:collapse;[or]
29[sp]broder-radius: 取值<br>(1) 正方形盒子的值设置为50%可以得到圆形<br>(2) 矩形盒子的值设置为较短边的一半可以得到胶囊型[or]
30[sp](1) position:relative<br>相对定位是相对自己的标准流的位置进行定位移动(2) 特性:<br>[1] 移动的出发点是自身标准流的位置<br>[2] 相对定位移动的元素不会对别的元素产生干扰,"没有脱标",真正占得位置还是标准流的位置<br>[3] 可以盖在标准流的上方<br>[4] 一般用于微调元素和配合绝对定位来实现效果[or]
31[sp](1) position:absolute<br>(2) 特性:<br>[1] 移动的出发点: 有定位的父级容器<br>[2] 脱标[or]
32[sp](1) position: fixed;<br>(2) 特性:<br>[1] 脱标<br>[2] 移动的出发点: 浏览器窗口[or]
33[sp](1) z-index只针对定位元素有效果<br>(2) z-index值越大,层级越高[or]
34[sp](1) display: none/block/inline<br>(2) visibility: hidden/visible(这种方式仍然会占位)[or]
35[sp]overflow:<br>[1] visible: 直接显示<br>[2] hidden: 超出的部分隐藏掉<br>[3] auto:如果超出,自动产生滚动条,如果不超出,不产生<br>[4] scroll:不管有没有超出,都有滚动条控件[or]
36[sp](1) 盒子内部和外部完全隔离的状态<br>(2)如何产生的<br>[1] overflow只要取值不是visible的情况下<br>[2] float的值不为none的时候<br>[3] display为table或者inline-block的时候<br>[4] position的取值为fixed或者absolute[or]
37[sp]vertical-align: 控制行内块与文字的对齐方式，写在行内块元素上面<br>[1] baseline: 图片的基线和文字的基线保持对齐<br>[2] top: 图片的顶线和文字的顶线(行高的顶线)对齐<br>[3] bottom: 图片的底线和文字的底线(行高的底线)对齐<br>[4] middle: 图片的中线和文字的中线对齐[or]
38[sp]overflow: hidden;<br>white-space: nowrap;<br>text-overflow:ellipsis;[or]
39[sp](1) 将需要显示的区域用切片选中,直接将切片的宽高赋值给盒子<br>(2) 直接获取切片的坐标,直接将坐标取负值赋值给background-position[or]
40[sp]cursor: pointer/default/text/move/url(),临时替换样式[or]
41[sp]outline:none;[or]
42[sp]resize:none;[or]
43[sp](1) li:nth-child(N) {}: 在兄弟排名为N的li元素<br>(2) li:first-child {}<br>(3) li:last-child {}<br>(4) li:nth-child(5n + 1)<br>(5) li:nth-child(even)<br>(6) li:nth-child(odd)<br>(7) li:nth-of-type(5) {}: 选择第五个为li元素,不考虑其他类型的兄弟[or]
44[sp]box-shadow: 水平偏移 垂直偏移 羽化大小 阴影尺寸 颜色 内外阴影[or]
45[sp]text-shadow: 水平偏移 垂直偏移 模糊度 阴影颜色;[or]
46[sp] background-size: 图片宽度 图片高度;<br>取值:<br>(1) 像素<br>(2) 百分比<br>(3) contain: 包含(显示整个图片,会留白)<br>(4) cover: 覆盖(不会留白,但是图片超出的部分会被隐藏)<br>* CSS3中,可以给一个盒子设置多个背景图片,通过都好分隔不同的背景图片即可[or]