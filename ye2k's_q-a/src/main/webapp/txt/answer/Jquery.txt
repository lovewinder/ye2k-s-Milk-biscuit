1[sp](1) $(document).ready(function(){ // 解析文档加载完成执行函数 })<br>简写: $(function(){...})<br>(2)<br>[1] 文档加载完成执行函数,确保能够获取到元素<br>[2] 形成了一个沙箱,避免了全局污染<br>(3) Js中入口函数(window.onload = function(){...})要等到页面中的所有资源文件(包括图片,文件)加载完成才开始执行,而jq的入口函数只会等待文档树加载完成就开始执行,并不会等待图片,文件的加载,jq入口函数可以多次调用且不会覆盖,onload只能执行一次;jquery入口函数优先于onload函数执行<br>[or]
2[sp](1) 用webapi获取页面的元素,返回的对象就是dom对象;用jquery方法获取页面元素返回的对象就是jquery对象,其内部是一个伪数组,存放的是dom对象<br>(2)<br>[1] $(DomObj) // 用$()包住dom对象即可将其转换为jquery对象<br>[2] $("li").get(1)或$("li")[1]从伪数组中取出的即是dom对象[or]
3[sp](1) jquery完全兼容css选择器<br>[1] id选择器: $("#id")<br>[2] 类选择器: $(".class)<br>[3] 标签选择器: $("div")<br>[4] 并集选择器: $("div,p,li")<br>[5] 交集选择器: $("div.redClass)<br>[6] 子代选择器: $("ul > li");<br>[7] 后代选择器: $("ul li")<br>[8] 属性选择器: $("[type="text"])<br>(2) 过滤选择器:<br>[1] :eq(index): 获取选择的元素中索引为index的元素<br>[2] :odd: 选择索引号为奇数的元素<br>[3] :even: 选择索引号为偶数的元素<br>[4] :first: 获取选择的元素中的第一个元素<br>[5] :last: 获取选择的元素中的最后一个元素<br>(3) 筛选选择器(关系选择器):<br>[1] Element.children(selector): 获取当前元素的所有子元素中为selector的元素(可以不传参,查找所有类型的元素)<br>[2] Element.find(selector): 获取当前元素的所有后代元素中为selector的元素(必须传参,否则不查找)<br>[3] Element.siblings(selector): 查找兄弟元素,不包括自己<br>[4] Element.parent(): 查找父元素<br>[5] Element.eq(index): 用法同:eq(index)<br>[6] next(): 查找下一个兄弟元素<br>[7] Element.prev(): 查找上一个兄弟元素<br>[8] Element.prevAll(): 查找之前的所有兄弟元素<br>[9] nextAll() 查找之后所有的兄弟元素[or]
4[sp]index()方法会返回当前元素在所有兄弟元素里面的索引[or]
5[sp](1) mouseover与mouseout是一对事件,当鼠标经过当前元素与当前元素的边界线时(即当前元素和子元素被移入移出都会触发事件),都会被触发<br>(2) mouseenter和mouseleave是一对事件,只有当鼠标经过当前元素会触发,经过子元素时事件不会触发[or]
6[sp](1) 添加类样式:<br>[1] addClass(name): 添加类样式,多个类之间由空格隔开<br>[2] removeClass(name): 移除指定类,如果参数为空,就会移除掉该元素所有类名<br>[3] hasClass(name): 判断是否包含某个类名,如果调用者包含多个元素,则只判断第一个元素<br>[4] toggleClass(name): 切换类名<br>(2) 添加行内样式:<br>[1]css(name,value): 给元素添加一个样式,直接给样式名称和值<br>[2] css({ key : value, key : value }): 给元素添加多个样式,参数传入对象<br>(3)css(name): 返回该样式名称的值[or]
7[sp](1) atrr() :操作普通属性(可以自定义属性)<br>[1] attr(name,valeu): 设置单个属性<br>[2] attr({ key1 : value1, key2 : value2}): 设置多个属性<br>[3] attr(name): 获取对应属性值<br>[4] removeAttr(name): 删除属性<br>* attr操作boolean类型的属性有bug,会变为undefined<br>(2) prop(): 设置布尔类型的属性,不能自定义属性<br>[1] checked<br>[2] selected<br>[3] disabled<br>[or]
8[sp](1) show(time,func)/hide(time,func)/toggle(time,func)<br>(2) slideDown(...)/slideUp(...)/slideToggle(...)<br>(3) fadeIn(...)/fadeOut(...)/fadeToggle(...)<br>(4) 自定义动画: animate(obj [,duration] [,easing] [,complete])<br>[1] obj(必须): 要执行动画的CSS属性<br>[2] duration: 动画持续的时间,可为数字(毫秒)和字符串(slow,normal,fast)<br>[3] easing: 动画的执行效果,swing(默认,秋千效果)/linear(匀速)<br>[4] complete: 动画执行完后执行的回调函数<br>(5) stop(param1,param2): 停止动画<br>[1] param1为true时,动画队列会被清除<br>[2] param2为true时,会直接跳到当前执行动画最后的执行结果[or]
9[sp](1) 表单<br>[1] $("input").val()<br> [2] $("input").val("hi")<br>(2) 普通标签<br>[1] $("div").html()/html("<p>hi</p>) (可以识别html标签)<br>[2] $("div").text() (获取时自动忽略所有的html标签)/text("hi")[or]
10[sp](1) width(): 盒子内部宽度<br>带参数表示设置/不带参数表示获取<br>(2) innerWidth(): width + padding<br>(3) outerWidth(): width + padding + border<br>(4) outerWidth(true): width + padding + border + margin<br>* 高度同上,略<br>* $(window).width(): 获取可视区宽度<br>$(window).height(): 获取可视区高度[or]
11[sp]没有参数表示获取,有参数表示设置<br>(1) $(window).scrollTop()<br>(2) $(window).scrollLeft()[or]
12[sp](1) $(selector).offset(): 获取元素距离document的位置,返回值为对象: {left: 100, top: 100}<br>(2) $(selector).position(): 获取相对于其最近的有定位的父元素的位置[or]
13[sp](1) 创建: $()中写html标签字符<br>(2) 添加:<br>[1] p append c: 给父元素内部从后面追加子元素<br>[2] c append p: 同上<br>[3] p prepend c: 给父元素内部从前面追加子元素<br>[4] c prependTo p: 同上<br>[5] before: 追加到元素的前面(同级)<br>[6] after: 追加到元素的后面(同级)<br>(3)删除:<br>[1] remove(): 删除自身,内部子元素一并删除<br>[2] empty(): 清空内部所有元素,不包括自身<br>(4)克隆: clone()<br>默认参数为false,会克隆元素标签,不会克隆事件<br>参数为true时,会克隆元素标签和事件<br>* 不论参数为false还是true,克隆方式都是深克隆[or]
14[sp]* 有多种事件绑定的方式,这里只说最常用的两种<br>(1)eventName(function(){}<br>(2)on:<br>[1] on(eventName,handler): 注册简单事件<br>[2] on(eventName, selector, handler): selector为要注册委托事件的元素选择器,该元素必须是调用on方法的内部元素才能触发(该方法在1.7版本后可用,建议使用)[or]
15[sp](1) $("selector").off(): 解绑匹配元素的所有事件<br>(2) $(selector).off("click" "mouseenter"): 解绑匹配元素的一个或多个事件[or]
16[sp](1) $(selector).eventName()<br>(2) $(selector).trigger("eventName")[or]
17[sp](1) screenX/screenY: 距离屏幕的宽和高<br>(2) clientX/clientY: 距离可视区的宽和高<br>(3) pageX/pageY: 距离页面的宽和高(包括被滚动条卷曲的距离)<br>(4) e.keyCode: 按下的键盘代码<br>(5) e.data: 存储绑定事件时传递的附加数据<br>(6) e.stopPropagation(): 阻止事件冒泡行为<br>(7) e.preventDefault(): 阻止浏览器默认行为[or]
18[sp](1) end(): jquery 存储包含DOM对象的状态,任何内部 DOM 对象的改变都会形成新的状态,可以通过end()返回上次的集合状态<br>(2) each(): jquery的隐式迭代会对所有的DOM对象设置相同的值,但是如果我们需要给每一个对象设置不同的值的时候,就需要自己进行迭代了<br>ep: $(selector).each(fucntion(index, element){}<<br>[or]
19[sp]jquery使用作为标示符,如果与其他框架中的冲突时,jquery 可以释放$符的控制权.<br>var jqueryName = $.noConflict() // 释放了$的控制权,并且把$的能力给了jqueryName[or]